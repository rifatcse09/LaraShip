version: '3.7'
services:
    #Nginx Service
    nginx:
      image: nginx:latest
      container_name: laraship_nginx
      tty: true
      ports:
          - 8081:80
      volumes:
          - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
          - ./.docker/nginx/app/default.conf:/etc/nginx/conf.d/default.conf 
      depends_on:
          - app
          - db
      links:
          - app
      environment:
        - X_SERVER_TYPE=nginx
      networks:
        - internal-network

    #PHP Service
    app:
      build:
        context: .
        dockerfile: ./.docker/app/Dockerfile
      container_name: laraship_app
      volumes:
        - ./app:/var/www/app
      restart: always
      environment:
        - X_SERVER_TYPE=app
      networks:
        - internal-network

    #Worker Service
    # worker:
    #   build:
    #     context: .
    #     dockerfile: ./.docker/worker/Dockerfile
    #   container_name: laraship_worker
    #   volumes:
    #     - ./app:/var/www/app
    #     - ./storage/logs/worker:/var/log
    #   environment:
    #     - X_SERVER_TYPE=worker
    #     - COMPOSER_PROCESS_TIMEOUT=600

    #   networks:
    #     - internal-network

    #MySQL Service
    db:
      image: "postgres:14"
      container_name: laraship_db
      environment:
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        POSTGRES_DB: ${DB_NAME}
        TZ: ${DB_TIMEZONE}
      volumes:
      - postgres_data:/var/lib/postgresql/data
      ports:
      - "${POSTGRES_PORT}:5432"
      networks:
      - internal-network

    #mailhog service for testing emails
    mailhog:
      image: mailhog/mailhog
      container_name: laraship_mailhog
      logging:
        driver: 'none'  # disable saving logs
      ports:
        - 1025:1025 # smtp server
        - 8025:8025 # web ui
      networks:
        - internal-network

    #REDIS
    redis:
      image: redis:latest
      container_name: redis
      ports:
        - "6379:6379"
      volumes:
        - ./.data/redis:/data # persistent storage
      networks:
        - internal-network
        
#Volumes
volumes:
  postgres_data:
    driver: local
    
networks:
  internal-network:
    driver: bridge